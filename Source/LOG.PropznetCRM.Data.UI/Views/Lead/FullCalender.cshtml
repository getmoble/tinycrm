<h2>Full Calendar</h2>

<div id="calendar"></div>
<div class="modal fade" id="myModaled" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Calender Operations</h4>
            </div>
            <div class="modal-body">

                <div class="btn-group">
                    <button class="btn btn-primary" id="btnEdit">Edit</button>
                    <button class="btn btn-primary" id="btnDelete">Delete</button>
                    <button class="btn btn-danger" data-dismiss="modal">Cancel</button>
                </div>
                <br />
                <br />
                <br />
                <br />

            </div>

        </div>
    </div>
</div>
@section scripts{
<script type="text/javascript">
    //function FullCalendarDemoViewModel() {
    //    var self = {};

    //    var datas = [{
    //        id: 1,
    //        title: 'Long Event',
    //        start: '2015-03-04',
    //        end: '2015-03-06'
    //    },
    //                        {
    //                            id: 2,
    //                            title: 'Repeating Event',
    //                            start: '2015-03-02T16:00:00'
    //                        },
    //                        {
    //                            title: 'Click for Google',
    //                            url: 'http://google.com/',
    //                            start: '2015-03-01'
    //                        }
    //    ];
    //    self.data = ko.observableArray(datas);
    //    self.init = function () {


    //        $('#calendar').fullCalendar({
    //            header: {
    //                left: 'prev,next today',
    //                center: 'title',
    //                right: 'month,agendaWeek,agendaDay'
    //            },
    //            selectable: true,
    //            selectHelper: true,
    //            select: function (start, end) {
    //                var promptOptions = {
    //                    title: "Event Title",
    //                    buttons: {
    //                        confirm: {
    //                            label: "Save"
    //                        }
    //                    },
    //                    callback: function (result) {

    //                        var title = result;
    //                        if (result === null) {
    //                            // console.log("Prompt dismissed");
    //                        } else {
    //                            self.eventData = {
    //                                title: title,
    //                                start: start,
    //                                end: end
    //                            };
    //                            var jsonData = JSON.stringify({
    //                                title: title,
    //                                start: start,
    //                                end: end
    //                            });
    //                            // self.data.push(self.eventData);
    //                            $('#calendar').fullCalendar('renderEvent', self.eventData, true);

    //                            $('#calendar').fullCalendar('unselect');
    //                        }
    //                    }
    //                };
    //                bootbox.prompt(promptOptions);

    //            },
    //            eventDrop: function (event, delta, revertFunc) {
    //            },
    //            eventClick: function (calEvent) {
    //                $('#myModaled').modal('show');
    //                $('#btnDelete').click(function (evt) {
    //                    bootbox.confirm("Delete ", function (result) {
    //                        var r = result;
    //                        if (r == true && r != null) {

    //                            var exampleArray = JSLINQ(ko.toJS(self.data))
    //     .Where(function (item) { return item.title == calEvent.title; });

    //                            self.data.remove(exampleArray.items[0]);

    //                            $('#calendar').fullCalendar('removeEvents', function (calEvent) {
    //                                return true;
    //                            });
    //                            $('#myModaled').modal('hide');
    //                        }
    //                        bootbox.hideAll();
    //                    });
    //                });
    //                $('#btnEdit').click(function (e) {
    //                    var promptOptions = {
    //                        title: "Event Title",
    //                        value: calEvent.title,
    //                        buttons: {
    //                            confirm: {
    //                                label: "Update"
    //                            }
    //                        },
    //                        callback: function (result) {

    //                            var title = result;
    //                            if (result === null) {
    //                                // console.log("Prompt dismissed");
    //                            } else {
    //                                calEvent.title = title;
    //                                $('#calendar').fullCalendar('updateEvent', calEvent, true);

    //                                $('#calendar').fullCalendar('unselect');
    //                            }
    //                            bootbox.hideAll();
    //                        }
    //                    };
    //                    bootbox.prompt(promptOptions);
    //                    $('#myModaled').modal('hide');
    //                });
    //            },
    //            //editable: true,
    //            events: ko.toJS(self.data)
    //        });
    //    };
    //    return self;
    //}
    //function FullCalendar(calendar) {
    //    var self = {};

    //    self.Id = ko.observable(calendar.Id || '');
    //    self.title = ko.observable(calendar.title || '');
    //    self.start = ko.observable(calendar.start || '');
    //    self.end = ko.observable(calendar.end || '');
    //    self.IsUpdated = ko.observable(false);
    //    return self;
    //}
    $(document).ready(function () {
        var vm = new FullCalendarViewModel();
        ko.applyBindings(vm);
        vm.init();
    });
</script>
}