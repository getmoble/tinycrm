@model Common.Auth.SingleTenant.ViewModels.SignInViewModel
@{
    ViewBag.Title = "SignIn";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}
    <div class="container">
        <div class="row">
            <div class="col-md-5 pad-lg bdr loginBox-bg col-lg-offset-3">
                <h2>Sign In</h2>
                   @using (Html.BeginForm("SignIn","User",FormMethod.Post))
                    {
                    <div>
                        <div class="form-group">
                            <label for="text" class="text-size">
                                Email
                            </label>
                            @*<input class="form-control" type="text" id="email" name="username" />*@
                            @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model=>model.Username)
                        </div>
                        <div class="form-group">
                            <label for="text" class="text-size">Password</label>
                            @*<input class="form-control" type="password" id="password" name="password" />*@
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                        <div class="form-group">
                            <input type="submit" class="btn btn-primary" value="Signin" />
                            <input type="reset" class="btn btn-default" value="Reset" />
                            <a href="/User/ForgotPassword" class="pull-right">Forgot password?</a>
                        </div>
                        <span class="validation-summary-errors">@ViewBag.Message</span>
                    </div>
             }
            </div>
        </div>
    </div>
@*<script src="~/Content/js/jquery-2.1.1.min.js"></script>*@
@section scripts{
<script type="text/javascript">
    $(document).ready(function () {
        var vm = new UserViewModel();
        ko.applyBindings(vm);
    });
</script>
}