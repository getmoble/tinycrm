@using System.Web.Optimization
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRM Lite</title>
    <link rel="stylesheet" href="~/Content/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/css/font-awesome.min.css" rel="stylesheet" />
     
    <link href="~/Content/css/propznet-style.css" rel="stylesheet" />
    <link href="~/Content/css/login.css" rel="stylesheet" />

    <link href='http://fonts.googleapis.com/css?family=Open+Sans:600italic,700italic,400,300,600,700,800' rel='stylesheet' type='text/css'>
    @*<style>
        body {
            background-image: url("/Content/images/login-bg.jpg");
            background-size: cover;
        }
    </style>
    @Styles.Render("~/Content/CustomCommonCss")*@
</head>
<body>

    <div id="large-header" class="large-header">


        <div class="login">

            <div class="fieldset">
                <legend class="legend"><i class="fa fa-power-off"></i> CRM Lite Login</legend>

                

                

                <div class="transparent-bg" id="pattern">
                   
                        @RenderBody()
                    

                </div>

            </div>
        </div>
        @*<div class="feedback">
            login successful <br />
            redirecting...
        </div>*@

        <div class="bottom">© 2015 - CRMLite</div>
        <canvas id="demo-canvas"></canvas>
            </div>

    
    @Scripts.Render("~/Content/Js/JqueryminJs")
    @Scripts.Render("~/Content/Js/BootstrapminJs")
    @Scripts.Render("~/Content/Js/JqueryScripts")
    @Scripts.Render("~/Content/Js/BlueimpfileuploadJs")
    @Scripts.Render("~/Content/Js/CustomCommonJs")
    @Scripts.Render("~/Content/Js/KnockoutJS")
    @Scripts.Render("~/Content/Js/CommonKnockoutJs")

            @*<script src="//cdn.jsdelivr.net/jquery/2.1.3/jquery.min.js"></script>*@
            @*@Scripts.Render("~/Content/js/AllScripts")*@
            @*<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>*@
            <script src="~/Content/js/bootstrap.min.js"></script>
            @*<script src="//cdn.datatables.net/1.10.6/js/jquery.dataTables.min.js"></script>*@
            @*<script src="~/Scripts/modernizr-2.6.2.js"></script>*@
            @*@Scripts.Render("~/Content/js/CommonKnockout")*@
            @RenderSection("scripts", required: false)


    <script src="http://code.jquery.com/jquery-2.1.4.min.js"></script> 

    <script>
        $(".input").focusin(function () {
            $(this).find("span").animate({ "opacity": "0" }, 200);
        });

        $(".input").focusout(function () {
            $(this).find("span").animate({ "opacity": "1" }, 300);
        });

        $(".login").submit(function () {
            $(this).find(".submit i").removeAttr('class').addClass("fa fa-check").css({ "color": "#fff" });
            $(".submit").css({ "background": "#2ecc71", "border-color": "#2ecc71" });
            $(".feedback").show().animate({ "opacity": "1", "bottom": "-80px" }, 400);
            $("input").css({ "border-color": "#2ecc71" });

        });



    </script>

    <script>

        (function () {

            var width, height, largeHeader, canvas, ctx, circles, target, animateHeader = true;

            // Main
            initHeader();
            addListeners();

            function initHeader() {
                width = window.innerWidth;
                height = window.innerHeight;
                target = { x: 0, y: height };

                largeHeader = document.getElementById('large-header');
                largeHeader.style.height = height + 'px';

                canvas = document.getElementById('demo-canvas');
                canvas.width = width;
                canvas.height = height;
                ctx = canvas.getContext('2d');

                // create particles
                circles = [];
                for (var x = 0; x < width * 0.5; x++) {
                    var c = new Circle();
                    circles.push(c);
                }
                animate();
            }

            // Event handling
            function addListeners() {
                window.addEventListener('scroll', scrollCheck);
                window.addEventListener('resize', resize);
            }

            function scrollCheck() {
                if (document.body.scrollTop > height) animateHeader = false;
                else animateHeader = true;
            }

            function resize() {
                width = window.innerWidth;
                height = window.innerHeight;
                largeHeader.style.height = height + 'px';
                canvas.width = width;
                canvas.height = height;
            }

            function animate() {
                if (animateHeader) {
                    ctx.clearRect(0, 0, width, height);
                    for (var i in circles) {
                        circles[i].draw();
                    }
                }
                requestAnimationFrame(animate);
            }

            // Canvas manipulation
            function Circle() {
                var _this = this;

                // constructor
                (function () {
                    _this.pos = {};
                    init();
                    console.log(_this);
                })();

                function init() {
                    _this.pos.x = Math.random() * width;
                    _this.pos.y = height + Math.random() * 100;
                    _this.alpha = 0.1 + Math.random() * 0.3;
                    _this.scale = 0.1 + Math.random() * 0.3;
                    _this.velocity = Math.random();
                }

                this.draw = function () {
                    if (_this.alpha <= 0) {
                        init();
                    }
                    _this.pos.y -= _this.velocity;
                    _this.alpha -= 0.0005;
                    ctx.beginPath();
                    ctx.arc(_this.pos.x, _this.pos.y, _this.scale * 10, 0, 2 * Math.PI, false);
                    ctx.fillStyle = 'rgba(255,255,255,' + _this.alpha + ')';
                    ctx.fill();
                };
            }

        })();


        (function () {
            var lastTime = 0;
            var vendors = ['ms', 'moz', 'webkit', 'o'];
            for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
                window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
                window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']
                    || window[vendors[x] + 'CancelRequestAnimationFrame'];
            }

            if (!window.requestAnimationFrame)
                window.requestAnimationFrame = function (callback, element) {
                    var currTime = new Date().getTime();
                    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                    var id = window.setTimeout(function () { callback(currTime + timeToCall); },
                        timeToCall);
                    lastTime = currTime + timeToCall;
                    return id;
                };

            if (!window.cancelAnimationFrame)
                window.cancelAnimationFrame = function (id) {
                    clearTimeout(id);
                };
        }());


    </script>

</body>
</html>