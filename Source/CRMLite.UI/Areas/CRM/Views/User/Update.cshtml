@model  PropznetCommon.Features.CRM.ViewModel.User.UserProfileViewModel
@using CRMLite.UI.Helpers;
@{
    ViewBag.Title = "Update";
}
<div class="">
    <div class="col-md-6 row">
        <div class="col-md-12 m-top20">
            <h3 class="inline-b">Edit User</h3>
        </div>
    </div>
    <div class="clearfix"></div>
    <div data-bind="loading:$root.IsBusy">
        <div>
            <input type="hidden" id="hdnAgnetId" value="@ViewBag.UserId" />
            <div class="pad0 padB0" data-bind="with:SelectedUser">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>User Name</label>
                       
                        @*<input type="text" data-bind="value:UserName" disabled="disabled" class="form-control" />*@
                        <label data-bind="text:UserName"></label>
                    </div>
                    <div class="form-group">
                        @Html.RequiredLabelFor(model => model.FirstName, new { @class = "control-label" })
                        <input type="text" data-bind="value:FirstName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Last Name</label>
                        <input type="text" data-bind="value:LastName" class="form-control" />
                    </div>
                    <div class="form-group">
                        @Html.RequiredLabelFor(model => model.Email, new { @class = "control-label" })
                        <input type="text" data-bind="value:Email, event:{ change: $parent.checkEmailEdit}" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label>Phone</label>
                        <input type="text" data-bind="value:PhoneNumber,numericOnly:true" class="form-control" />
                    </div>

                    <div class="form-group">
                        @Html.RequiredLabelFor(model => model.Address, new { @class = "control-label" })
                        <textarea data-bind="value:Address" class="form-control" rows="5"></textarea>
                    </div>
                </div>
                <div class="col-md-6 ">
                    <label>&nbsp;</label>
                    <div class="form-group m-b-md m-l-lg">


                        <label class="checkbox-inline i-checks">
                            <input type="checkbox" data-bind="checked:IsListingMember">
                            <i></i> Listing Member
                        </label>


                    </div>
                    <div class="form-group">
                        <div class="btn-group">
                            <input id="avatar" class="btn btn-primary uploadbtn" type="file" name="avatar" accept=".jpg,.jpeg,.png,.gif" data-bind="text:Image" />
                        </div>
                        <div class="nailthumb-container">
                            <img id=ThumbnailImageS height=85 width=90 border=0 data-bind=" attr:{src: Image}">
                        </div>
                    </div>

                </div>
                <div class="clearfix"></div>

            </div>
            <div class="col-md-12 pad0 padT0">
                <div class="pull-right">
                    <span class="required">*</span><i>Indicates required field</i>
                </div>
                <button class="btn btn-primary ladda-button" data-style="expand-left" data-bind="ladda:$root.IsButtonBusy,click:UpdateUserProfile"><span class=" ladda-label"><span class=" ladda-label"><i class="fa fa-check"></i> Update</span></button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/App/ViewModels/User/UserModel.js"></script>
    <script src="~/App/ViewModels/User/AddEditUserViewModel.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var vm = new AddEditUserViewModel();
            ko.applyBindings(vm);
            vm.GetUser();
            vm.clear();
            vm.init();
        });
    </script>
}